version: 2.1
orbs:
    aws-cli: circleci/aws-cli@1.2.1
    slack: circleci/slack@3.4.2
commands:
    run-docker:
        steps:
            - run: docker-compose -f test/local/test-dbs.yml up -d
            - run: sleep 20
    use-nvm:
        steps:
            - run: |
                echo 'export NVM_DIR="/opt/circleci/.nvm"' >> $BASH_ENV
                echo ' [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"' >> $BASH_ENV
            - run: |
                node -v
            - run: |
                nvm install v12.10.0
                node -v
                nvm alias default v12.10.0
            - run: |
                node -v
    node-install:
        steps:
            - run: npm ci
    node-linter:
        steps:
            - run: npm run lint -- --format html --output-file ./coverage/lint/index.html
            - store_artifacts:
                path: ./coverage
    node-test:
        steps:
            - run:
                when: always
                command: npm run test -- --reporter mocha-multi-reporters --reporter-options configFile=./test/reporter-config.json
                environment:
                    MOCHAWESOME_REPORTFILENAME: index.html
                    MOCHAWESOME_REPORTDIR: ./coverage/unit-test
            - store_test_results:
                path: ./coverage/unit-test
            - store_artifacts:
                path: ./coverage
    node-report:
        steps:
            - run: npm run report -- --reporter=html
            - store_artifacts:
                path: ./coverage
    publish-results:
        steps:
            - run: aws s3 sync ./coverage s3://tools-test-reports.syndpe.com/$CIRCLE_PROJECT_REPONAME --delete
            - run: aws cloudfront create-invalidation --distribution-id E38VEFEW0CRHJD --paths "/*"
    npm-deploy:
        steps:
            - run: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > .npmrc
            - run: npm version $CIRCLE_TAG --allow-same-version --no-git-tag-version
            - run: npm publish --access public
    slack-status:
        steps:
            - slack/status:
                mentions: '${CIRCLE_USERNAME}, version=$CIRCLE_TAG'
    slack-error:
        steps:
            - slack/status:
                fail_only: true
                mentions: '${CIRCLE_USERNAME}'
jobs:
    install-build-test:
        machine:
            image: ubuntu-1604:201903-01
        steps:
            - checkout
            - run-docker
            - use-nvm
            - node-install
            - aws-cli/setup
            - node-linter
            - node-test
            - node-report
            - publish-results
            - slack-error
    install-build-deploy:
        docker:
            - image: node:12
        steps:
            - checkout
            - node-install
            - npm-deploy
            - slack-status
workflows:
    install-build-deploy:
        jobs:
            - install-build-deploy:
                context:
                    - tools-cicd
                    - npm-org-token
                filters:
                    tags:
                        only: /.*/
                    branches:
                        ignore: /.*/
    install-build-test:
        jobs:
            - install-build-test:
                context:
                    - tools-cicd
                    - npm-org-token
                filters:
                    tags:
                        ignore: /.*/
                    branches:
                        ignore: /dependabot.*/
